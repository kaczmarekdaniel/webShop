{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport axios from 'axios';\nconst studentsAPI = axios.create({});\nstudentsAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    config.headers.authorization = `Bearer ${token}`;\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const useStudents = () => {\n  _s();\n\n  const getGroups = useCallback(async () => {\n    try {\n      const result = await studentsAPI.get('/groups');\n      return result.data.groups;\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n  const getStudentById = useCallback(async studentId => {\n    try {\n      const result = await studentsAPI.get(`/students/${studentId}`);\n      return result.data.students;\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n  const getStudentsByGroup = useCallback(async groupId => {\n    try {\n      const result = await studentsAPI.get(`/groups/${groupId}`);\n      return result.data.students;\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  const findStudents = async searchPhrase => {\n    try {\n      const {\n        data\n      } = await studentsAPI.post(`/students/search`, {\n        searchPhrase\n      });\n      return data;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return {\n    getGroups,\n    getStudentsByGroup,\n    findStudents,\n    getStudentById\n  };\n};\n\n_s(useStudents, \"BjwBSiWJfJo3JaHRFoVnoKxPSLM=\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/hr-study-buddy/src/hooks/useStudents.js"],"names":["useCallback","axios","studentsAPI","create","interceptors","request","use","config","token","localStorage","getItem","headers","authorization","error","Promise","reject","useStudents","getGroups","result","get","data","groups","e","console","log","getStudentById","studentId","students","getStudentsByGroup","groupId","findStudents","searchPhrase","post"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAa,EAAb,CAApB;AAEAD,WAAW,CAACE,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CACGC,MAAD,IAAY;AACV,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,MAAIF,KAAJ,EAAW;AACTD,IAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,KAAM,EAA/C;AACD;;AAED,SAAOD,MAAP;AACD,CATH,EAUGM,KAAD,IAAW;AACT,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAZH;AAeA,OAAO,MAAMG,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAMC,SAAS,GAAGjB,WAAW,CAAC,YAAY;AACxC,QAAI;AACF,YAAMkB,MAAM,GAAG,MAAMhB,WAAW,CAACiB,GAAZ,CAAgB,SAAhB,CAArB;AACA,aAAOD,MAAM,CAACE,IAAP,CAAYC,MAAnB;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GAP4B,EAO1B,EAP0B,CAA7B;AASA,QAAMG,cAAc,GAAGzB,WAAW,CAAC,MAAO0B,SAAP,IAAqB;AACtD,QAAI;AACF,YAAMR,MAAM,GAAG,MAAMhB,WAAW,CAACiB,GAAZ,CAAiB,aAAYO,SAAU,EAAvC,CAArB;AACA,aAAOR,MAAM,CAACE,IAAP,CAAYO,QAAnB;AACD,KAHD,CAGE,OAAOL,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GAPiC,EAO/B,EAP+B,CAAlC;AASA,QAAMM,kBAAkB,GAAG5B,WAAW,CAAC,MAAO6B,OAAP,IAAmB;AACxD,QAAI;AACF,YAAMX,MAAM,GAAG,MAAMhB,WAAW,CAACiB,GAAZ,CAAiB,WAAUU,OAAQ,EAAnC,CAArB;AACA,aAAOX,MAAM,CAACE,IAAP,CAAYO,QAAnB;AACD,KAHD,CAGE,OAAOL,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GAPqC,EAOnC,EAPmC,CAAtC;;AASA,QAAMQ,YAAY,GAAG,MAAOC,YAAP,IAAwB;AAC3C,QAAI;AACF,YAAM;AAAEX,QAAAA;AAAF,UAAW,MAAMlB,WAAW,CAAC8B,IAAZ,CAAkB,kBAAlB,EAAqC;AAC1DD,QAAAA;AAD0D,OAArC,CAAvB;AAGA,aAAOX,IAAP;AACD,KALD,CAKE,OAAOE,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GATD;;AAWA,SAAO;AACLL,IAAAA,SADK;AAELW,IAAAA,kBAFK;AAGLE,IAAAA,YAHK;AAILL,IAAAA;AAJK,GAAP;AAMD,CA7CM;;GAAMT,W","sourcesContent":["import { useCallback } from 'react';\nimport axios from 'axios';\n\nconst studentsAPI = axios.create({});\n\nstudentsAPI.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      config.headers.authorization = `Bearer ${token}`;\n    }\n\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport const useStudents = () => {\n  const getGroups = useCallback(async () => {\n    try {\n      const result = await studentsAPI.get('/groups');\n      return result.data.groups;\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  const getStudentById = useCallback(async (studentId) => {\n    try {\n      const result = await studentsAPI.get(`/students/${studentId}`);\n      return result.data.students;\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  const getStudentsByGroup = useCallback(async (groupId) => {\n    try {\n      const result = await studentsAPI.get(`/groups/${groupId}`);\n      return result.data.students;\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  const findStudents = async (searchPhrase) => {\n    try {\n      const { data } = await studentsAPI.post(`/students/search`, {\n        searchPhrase,\n      });\n      return data;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return {\n    getGroups,\n    getStudentsByGroup,\n    findStudents,\n    getStudentById,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}