{"ast":null,"code":"import { rest } from 'msw';\nimport { db } from 'mocks/db';\nexport const groups = [rest.get('/groups', (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json({\n    groups: db.group.getAll()\n  }));\n}), rest.get('/groups/:id', (req, res, ctx) => {\n  if (req.params.id) {\n    const matchingStudents = db.student.findMany({\n      where: {\n        group: {\n          equals: req.params.id\n        }\n      }\n    });\n    return res(ctx.status(200), ctx.json({\n      students: matchingStudents\n    }));\n  }\n\n  return res(ctx.status(404), ctx.json({\n    error: 'Please provide the group ID'\n  }));\n})];","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/hr-study-buddy/src/mocks/handlers/groups.js"],"names":["rest","db","groups","get","req","res","ctx","status","json","group","getAll","params","id","matchingStudents","student","findMany","where","equals","students","error"],"mappings":"AAAA,SAASA,IAAT,QAAqB,KAArB;AACA,SAASC,EAAT,QAAmB,UAAnB;AAEA,OAAO,MAAMC,MAAM,GAAG,CACpBF,IAAI,CAACG,GAAL,CAAS,SAAT,EAAoB,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB;AACrC,SAAOD,GAAG,CAACC,GAAG,CAACC,MAAJ,CAAW,GAAX,CAAD,EAAkBD,GAAG,CAACE,IAAJ,CAAS;AAAEN,IAAAA,MAAM,EAAED,EAAE,CAACQ,KAAH,CAASC,MAAT;AAAV,GAAT,CAAlB,CAAV;AACD,CAFD,CADoB,EAIpBV,IAAI,CAACG,GAAL,CAAS,aAAT,EAAwB,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB;AACzC,MAAIF,GAAG,CAACO,MAAJ,CAAWC,EAAf,EAAmB;AACjB,UAAMC,gBAAgB,GAAGZ,EAAE,CAACa,OAAH,CAAWC,QAAX,CAAoB;AAC3CC,MAAAA,KAAK,EAAE;AACLP,QAAAA,KAAK,EAAE;AACLQ,UAAAA,MAAM,EAAEb,GAAG,CAACO,MAAJ,CAAWC;AADd;AADF;AADoC,KAApB,CAAzB;AAOA,WAAOP,GAAG,CACRC,GAAG,CAACC,MAAJ,CAAW,GAAX,CADQ,EAERD,GAAG,CAACE,IAAJ,CAAS;AACPU,MAAAA,QAAQ,EAAEL;AADH,KAAT,CAFQ,CAAV;AAMD;;AAED,SAAOR,GAAG,CACRC,GAAG,CAACC,MAAJ,CAAW,GAAX,CADQ,EAERD,GAAG,CAACE,IAAJ,CAAS;AACPW,IAAAA,KAAK,EAAE;AADA,GAAT,CAFQ,CAAV;AAMD,CAvBD,CAJoB,CAAf","sourcesContent":["import { rest } from 'msw';\nimport { db } from 'mocks/db';\n\nexport const groups = [\n  rest.get('/groups', (req, res, ctx) => {\n    return res(ctx.status(200), ctx.json({ groups: db.group.getAll() }));\n  }),\n  rest.get('/groups/:id', (req, res, ctx) => {\n    if (req.params.id) {\n      const matchingStudents = db.student.findMany({\n        where: {\n          group: {\n            equals: req.params.id,\n          },\n        },\n      });\n      return res(\n        ctx.status(200),\n        ctx.json({\n          students: matchingStudents,\n        })\n      );\n    }\n\n    return res(\n      ctx.status(404),\n      ctx.json({\n        error: 'Please provide the group ID',\n      })\n    );\n  }),\n];\n"]},"metadata":{},"sourceType":"module"}