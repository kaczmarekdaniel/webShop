{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\nexport const notesApi = createApi({\n  reducerPath: 'notesApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: '/'\n  }),\n  tagTypes: ['Notes'],\n  endpoints: builder => ({\n    getNotes: builder.query({\n      query: () => 'notes',\n      providesTags: ['Notes']\n    }),\n    addNote: builder.mutation({\n      query: body => ({\n        url: 'notes',\n        method: 'POST',\n        body\n      }),\n      invalidatesTags: ['Notes']\n    }),\n    removeNote: builder.mutation({\n      query: body => ({\n        url: 'notes',\n        method: 'DELETE',\n        body\n      }),\n      invalidatesTags: ['Notes']\n    })\n  })\n});\nexport const {\n  useGetNotesQuery,\n  useAddNoteMutation,\n  useRemoveNoteMutation\n} = notesApi;","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/hr-study-buddy/src/store/api/notes.js"],"names":["createApi","fetchBaseQuery","notesApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getNotes","query","providesTags","addNote","mutation","body","url","method","invalidatesTags","removeNote","useGetNotesQuery","useAddNoteMutation","useRemoveNoteMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,mCAA1C;AAEA,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;AAChCG,EAAAA,WAAW,EAAE,UADmB;AAEhCC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AACxBI,IAAAA,OAAO,EAAE;AADe,GAAD,CAFO;AAKhCC,EAAAA,QAAQ,EAAE,CAAC,OAAD,CALsB;AAMhCC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,QAAQ,EAAED,OAAO,CAACE,KAAR,CAAc;AACtBA,MAAAA,KAAK,EAAE,MAAM,OADS;AAEtBC,MAAAA,YAAY,EAAE,CAAC,OAAD;AAFQ,KAAd,CADa;AAKvBC,IAAAA,OAAO,EAAEJ,OAAO,CAACK,QAAR,CAAiB;AACxBH,MAAAA,KAAK,EAAGI,IAAD,KAAW;AAChBC,QAAAA,GAAG,EAAE,OADW;AAEhBC,QAAAA,MAAM,EAAE,MAFQ;AAGhBF,QAAAA;AAHgB,OAAX,CADiB;AAMxBG,MAAAA,eAAe,EAAE,CAAC,OAAD;AANO,KAAjB,CALc;AAavBC,IAAAA,UAAU,EAAEV,OAAO,CAACK,QAAR,CAAiB;AAC3BH,MAAAA,KAAK,EAAGI,IAAD,KAAW;AAChBC,QAAAA,GAAG,EAAE,OADW;AAEhBC,QAAAA,MAAM,EAAE,QAFQ;AAGhBF,QAAAA;AAHgB,OAAX,CADoB;AAM3BG,MAAAA,eAAe,EAAE,CAAC,OAAD;AANU,KAAjB;AAbW,GAAd;AANqB,CAAD,CAA1B;AA8BP,OAAO,MAAM;AAAEE,EAAAA,gBAAF;AAAoBC,EAAAA,kBAApB;AAAwCC,EAAAA;AAAxC,IAAkEnB,QAAxE","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\n\nexport const notesApi = createApi({\n  reducerPath: 'notesApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: '/',\n  }),\n  tagTypes: ['Notes'],\n  endpoints: (builder) => ({\n    getNotes: builder.query({\n      query: () => 'notes',\n      providesTags: ['Notes'],\n    }),\n    addNote: builder.mutation({\n      query: (body) => ({\n        url: 'notes',\n        method: 'POST',\n        body,\n      }),\n      invalidatesTags: ['Notes'],\n    }),\n    removeNote: builder.mutation({\n      query: (body) => ({\n        url: 'notes',\n        method: 'DELETE',\n        body,\n      }),\n      invalidatesTags: ['Notes'],\n    }),\n  }),\n});\n\nexport const { useGetNotesQuery, useAddNoteMutation, useRemoveNoteMutation } = notesApi;\n"]},"metadata":{},"sourceType":"module"}