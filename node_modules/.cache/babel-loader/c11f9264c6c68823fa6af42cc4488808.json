{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/daniel/Documents/GitHub/hr-study-buddy/src/components/organisms/NotesWidget/NotesWidget.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Note from 'components/molecules/Note/Note';\nimport { NotesWrapper, WidgetHandler, Wrapper } from 'components/organisms/NotesWidget/NotesWidget.styles';\nimport { useGetNotesQuery } from 'store';\n\nconst NotesWidget = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  const {\n    data,\n    isLoading\n  } = useGetNotesQuery();\n\n  const handleToggleWidget = () => setIsOpen(prevState => !prevState);\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    isOpen: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(WidgetHandler, {\n      onClick: handleToggleWidget,\n      children: \"notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(NotesWrapper, {\n      children: data.notes.length ? data.notes.map(({\n        title,\n        content,\n        id\n      }) => /*#__PURE__*/_jsxDEV(Note, {\n        id: id,\n        title: title,\n        content: content\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 56\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create your first note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotesWidget, \"FjA/sKHPQGwUsVoyIGJ+FwLya8Q=\", false, function () {\n  return [useGetNotesQuery];\n});\n\n_c = NotesWidget;\nexport default NotesWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesWidget\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/hr-study-buddy/src/components/organisms/NotesWidget/NotesWidget.js"],"names":["React","Note","NotesWrapper","WidgetHandler","Wrapper","useGetNotesQuery","NotesWidget","isOpen","setIsOpen","useState","data","isLoading","handleToggleWidget","prevState","notes","length","map","title","content","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,OAAtC,QAAqD,qDAArD;AACA,SAASC,gBAAT,QAAiC,OAAjC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,KAAK,CAACS,QAAN,CAAe,KAAf,CAA5B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBN,gBAAgB,EAA5C;;AAEA,QAAMO,kBAAkB,GAAG,MAAMJ,SAAS,CAAEK,SAAD,IAAe,CAACA,SAAjB,CAA1C;;AAEA,sBACE,QAAC,OAAD;AAAS,IAAA,MAAM,EAAEN,MAAjB;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEK,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,YAAD;AAAA,gBACGD,IAAI,CAACI,KAAL,CAAWC,MAAX,GACCL,IAAI,CAACI,KAAL,CAAWE,GAAX,CAAe,CAAC;AAAEC,QAAAA,KAAF;AAASC,QAAAA,OAAT;AAAkBC,QAAAA;AAAlB,OAAD,kBAA4B,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEA,EAAV;AAAuB,QAAA,KAAK,EAAEF,KAA9B;AAAqC,QAAA,OAAO,EAAEC;AAA9C,SAAmBC,EAAnB;AAAA;AAAA;AAAA;AAAA,cAA3C,CADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAtBD;;GAAMb,W;UAEwBD,gB;;;KAFxBC,W;AAwBN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport Note from 'components/molecules/Note/Note';\nimport { NotesWrapper, WidgetHandler, Wrapper } from 'components/organisms/NotesWidget/NotesWidget.styles';\nimport { useGetNotesQuery } from 'store';\n\nconst NotesWidget = () => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const { data, isLoading } = useGetNotesQuery();\n\n  const handleToggleWidget = () => setIsOpen((prevState) => !prevState);\n\n  return (\n    <Wrapper isOpen={isOpen}>\n      <WidgetHandler onClick={handleToggleWidget}>notes</WidgetHandler>\n      {isLoading ? (\n        <h3>Loading...</h3>\n      ) : (\n        <NotesWrapper>\n          {data.notes.length ? (\n            data.notes.map(({ title, content, id }) => <Note id={id} key={id} title={title} content={content} />)\n          ) : (\n            <p>Create your first note</p>\n          )}\n        </NotesWrapper>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default NotesWidget;\n"]},"metadata":{},"sourceType":"module"}