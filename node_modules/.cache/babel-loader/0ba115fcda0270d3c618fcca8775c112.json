{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/daniel/Documents/GitHub/hr-study-buddy/src/views/Notes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button } from 'components/atoms/Button/Button';\nimport Note from 'components/molecules/Note/Note';\nimport { useAddNoteMutation, useGetNotesQuery } from 'store';\nimport { FormWrapper, NotesWrapper, StyledFormField, Wrapper } from 'views/Notes.styles';\nimport { useForm } from 'react-hook-form';\n\nconst Notes = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    data,\n    isLoading\n  } = useGetNotesQuery();\n  const [addNote] = useAddNoteMutation();\n\n  const handleAddNote = ({\n    title,\n    content\n  }) => {\n    addNote({\n      title,\n      content\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(FormWrapper, {\n      onSubmit: handleSubmit(handleAddNote),\n      children: [/*#__PURE__*/_jsxDEV(StyledFormField, { ...register('title', {\n          required: true\n        }),\n        label: \"Title\",\n        name: \"title\",\n        id: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledFormField, { ...register('content', {\n          required: true\n        }),\n        isTextarea: true,\n        label: \"Content\",\n        name: \"content\",\n        id: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Title is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 26\n      }, this), errors.content && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Content is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(NotesWrapper, {\n      children: data.notes.length ? data.notes.map(({\n        title,\n        content,\n        id\n      }) => /*#__PURE__*/_jsxDEV(Note, {\n        id: id,\n        title: title,\n        content: content\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 56\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create your first note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notes, \"J7w1+yaUeD3lIdfVtgZmjtEg/QQ=\", false, function () {\n  return [useForm, useGetNotesQuery, useAddNoteMutation];\n});\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/hr-study-buddy/src/views/Notes.js"],"names":["React","Button","Note","useAddNoteMutation","useGetNotesQuery","FormWrapper","NotesWrapper","StyledFormField","Wrapper","useForm","Notes","register","handleSubmit","formState","errors","data","isLoading","addNote","handleAddNote","title","content","required","notes","length","map","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,OAArD;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,eAApC,EAAqDC,OAArD,QAAoE,oBAApE;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIFL,OAAO,EAJX;AAKA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBZ,gBAAgB,EAA5C;AACA,QAAM,CAACa,OAAD,IAAYd,kBAAkB,EAApC;;AAEA,QAAMe,aAAa,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAwB;AAC5CH,IAAAA,OAAO,CAAC;AAAEE,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAER,YAAY,CAACM,aAAD,CAAnC;AAAA,8BACE,QAAC,eAAD,OAAqBP,QAAQ,CAAC,OAAD,EAAU;AAAEU,UAAAA,QAAQ,EAAE;AAAZ,SAAV,CAA7B;AAA4D,QAAA,KAAK,EAAC,OAAlE;AAA0E,QAAA,IAAI,EAAC,OAA/E;AAAuF,QAAA,EAAE,EAAC;AAA1F;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD,OAAqBV,QAAQ,CAAC,SAAD,EAAY;AAAEU,UAAAA,QAAQ,EAAE;AAAZ,SAAZ,CAA7B;AAA8D,QAAA,UAAU,MAAxE;AAAyE,QAAA,KAAK,EAAC,SAA/E;AAAyF,QAAA,IAAI,EAAC,SAA9F;AAAwG,QAAA,EAAE,EAAC;AAA3G;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGP,MAAM,CAACK,KAAP,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHnB,EAIGL,MAAM,CAACM,OAAP,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJrB,eAKE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQGJ,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,YAAD;AAAA,gBACGD,IAAI,CAACO,KAAL,CAAWC,MAAX,GACCR,IAAI,CAACO,KAAL,CAAWE,GAAX,CAAe,CAAC;AAAEL,QAAAA,KAAF;AAASC,QAAAA,OAAT;AAAkBK,QAAAA;AAAlB,OAAD,kBAA4B,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEA,EAAV;AAAuB,QAAA,KAAK,EAAEN,KAA9B;AAAqC,QAAA,OAAO,EAAEC;AAA9C,SAAmBK,EAAnB;AAAA;AAAA;AAAA;AAAA,cAA3C,CADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAnCD;;GAAMf,K;UAKAD,O,EACwBL,gB,EACVD,kB;;;KAPdO,K;AAqCN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { Button } from 'components/atoms/Button/Button';\nimport Note from 'components/molecules/Note/Note';\nimport { useAddNoteMutation, useGetNotesQuery } from 'store';\nimport { FormWrapper, NotesWrapper, StyledFormField, Wrapper } from 'views/Notes.styles';\nimport { useForm } from 'react-hook-form';\n\nconst Notes = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const { data, isLoading } = useGetNotesQuery();\n  const [addNote] = useAddNoteMutation();\n\n  const handleAddNote = ({ title, content }) => {\n    addNote({ title, content });\n  };\n\n  return (\n    <Wrapper>\n      <FormWrapper onSubmit={handleSubmit(handleAddNote)}>\n        <StyledFormField {...register('title', { required: true })} label=\"Title\" name=\"title\" id=\"title\" />\n        <StyledFormField {...register('content', { required: true })} isTextarea label=\"Content\" name=\"content\" id=\"content\" />\n        {errors.title && <span>Title is required</span>}\n        {errors.content && <span>Content is required</span>}\n        <Button type=\"submit\">Add</Button>\n      </FormWrapper>\n      {isLoading ? (\n        <h2>Loading...</h2>\n      ) : (\n        <NotesWrapper>\n          {data.notes.length ? (\n            data.notes.map(({ title, content, id }) => <Note id={id} key={id} title={title} content={content} />)\n          ) : (\n            <p>Create your first note</p>\n          )}\n        </NotesWrapper>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}