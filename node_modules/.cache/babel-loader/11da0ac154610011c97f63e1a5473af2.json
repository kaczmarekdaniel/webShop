{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/daniel/Documents/GitHub/hr-study-buddy/src/views/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport StudentsList from 'components/organisms/StudentsList/StudentsList';\nimport { useStudents } from 'hooks/useStudents';\nimport { GroupWrapper, TitleWrapper, Wrapper } from 'views/Dashboard.styles';\nimport { Title } from 'components/atoms/Title/Title';\nimport useModal from 'components/organisms/Modal/useModal';\nimport StudentDetails from 'components/molecules/StudentDetails/StudentDetails';\nimport Modal from 'components/organisms/Modal/Modal';\nimport { useGetGroupsQuery } from 'store';\n\nconst Dashboard = () => {\n  _s();\n\n  const [currentStudent, setCurrentStudent] = useState(null);\n  const {\n    getStudentById\n  } = useStudents();\n  const {\n    id\n  } = useParams();\n  const {\n    isOpen,\n    handleOpenModal,\n    handleCloseModal\n  } = useModal();\n  const {\n    data,\n    isLoading\n  } = useGetGroupsQuery();\n\n  const handleOpenStudentDetails = async id => {\n    const student = await getStudentById(id);\n    setCurrentStudent(student);\n    handleOpenModal();\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(TitleWrapper, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!id && data.groups.length > 0) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: `/group/${data.groups[0].id}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 45\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(TitleWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        as: \"h2\",\n        children: [\"Group \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: data.groups.map(({\n          id\n        }) => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/group/${id}`,\n          children: [id, ' ']\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GroupWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(StudentsList, {\n        handleOpenStudentDetails: handleOpenStudentDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        handleClose: handleCloseModal,\n        children: /*#__PURE__*/_jsxDEV(StudentDetails, {\n          student: currentStudent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"Zf3euT9d+TU0T4nkxZKONu7RgB0=\", false, function () {\n  return [useStudents, useParams, useModal, useGetGroupsQuery];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/hr-study-buddy/src/views/Dashboard.js"],"names":["React","useEffect","useState","Redirect","useParams","Link","StudentsList","useStudents","GroupWrapper","TitleWrapper","Wrapper","Title","useModal","StudentDetails","Modal","useGetGroupsQuery","Dashboard","currentStudent","setCurrentStudent","getStudentById","id","isOpen","handleOpenModal","handleCloseModal","data","isLoading","handleOpenStudentDetails","student","groups","length","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,kBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,gDAAzB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,OAArC,QAAoD,wBAApD;AACA,SAASC,KAAT,QAAsB,8BAAtB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,cAAP,MAA2B,oDAA3B;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,SAASC,iBAAT,QAAkC,OAAlC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAqBZ,WAAW,EAAtC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAShB,SAAS,EAAxB;AACA,QAAM;AAAEiB,IAAAA,MAAF;AAAUC,IAAAA,eAAV;AAA2BC,IAAAA;AAA3B,MAAgDX,QAAQ,EAA9D;AACA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBV,iBAAiB,EAA7C;;AAEA,QAAMW,wBAAwB,GAAG,MAAON,EAAP,IAAc;AAC7C,UAAMO,OAAO,GAAG,MAAMR,cAAc,CAACC,EAAD,CAApC;AACAF,IAAAA,iBAAiB,CAACS,OAAD,CAAjB;AACAL,IAAAA,eAAe;AAChB,GAJD;;AAMA,MAAIG,SAAJ,EAAe;AACb,wBACE,QAAC,OAAD;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAI,CAACL,EAAD,IAAOI,IAAI,CAACI,MAAL,CAAYC,MAAZ,GAAqB,CAAhC,EAAmC,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAG,UAASL,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeR,EAAG;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAP;AAEnC,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,YAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,EAAE,EAAC,IAAV;AAAA,6BAAsBA,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGI,IAAI,CAACI,MAAL,CAAYE,GAAZ,CAAgB,CAAC;AAAEV,UAAAA;AAAF,SAAD,kBACf,QAAC,IAAD;AAAe,UAAA,EAAE,EAAG,UAASA,EAAG,EAAhC;AAAA,qBACGA,EADH,EACO,GADP;AAAA,WAAWA,EAAX;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,YAAD;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,wBAAwB,EAAEM;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,MAAM,EAAEL,MAAf;AAAuB,QAAA,WAAW,EAAEE,gBAApC;AAAA,+BACE,QAAC,cAAD;AAAgB,UAAA,OAAO,EAAEN;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA3CD;;GAAMD,S;UAEuBT,W,EACZH,S,EACuCQ,Q,EAC1BG,iB;;;KALxBC,S;AA6CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport StudentsList from 'components/organisms/StudentsList/StudentsList';\nimport { useStudents } from 'hooks/useStudents';\nimport { GroupWrapper, TitleWrapper, Wrapper } from 'views/Dashboard.styles';\nimport { Title } from 'components/atoms/Title/Title';\nimport useModal from 'components/organisms/Modal/useModal';\nimport StudentDetails from 'components/molecules/StudentDetails/StudentDetails';\nimport Modal from 'components/organisms/Modal/Modal';\nimport { useGetGroupsQuery } from 'store';\n\nconst Dashboard = () => {\n  const [currentStudent, setCurrentStudent] = useState(null);\n  const { getStudentById } = useStudents();\n  const { id } = useParams();\n  const { isOpen, handleOpenModal, handleCloseModal } = useModal();\n  const { data, isLoading } = useGetGroupsQuery();\n\n  const handleOpenStudentDetails = async (id) => {\n    const student = await getStudentById(id);\n    setCurrentStudent(student);\n    handleOpenModal();\n  };\n\n  if (isLoading) {\n    return (\n      <Wrapper>\n        <TitleWrapper>Loading...</TitleWrapper>\n      </Wrapper>\n    );\n  }\n\n  if (!id && data.groups.length > 0) return <Redirect to={`/group/${data.groups[0].id}`} />;\n\n  return (\n    <Wrapper>\n      <TitleWrapper>\n        <Title as=\"h2\">Group {id}</Title>\n        <nav>\n          {data.groups.map(({ id }) => (\n            <Link key={id} to={`/group/${id}`}>\n              {id}{' '}\n            </Link>\n          ))}\n        </nav>\n      </TitleWrapper>\n      <GroupWrapper>\n        <StudentsList handleOpenStudentDetails={handleOpenStudentDetails} />\n        <Modal isOpen={isOpen} handleClose={handleCloseModal}>\n          <StudentDetails student={currentStudent} />\n        </Modal>\n      </GroupWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}